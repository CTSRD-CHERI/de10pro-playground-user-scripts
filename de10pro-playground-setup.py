#! /usr/bin/env python3

import pathlib as p
import datetime
import argparse
import jinja2
import yaml

def report(params={}, comment_pfx='#'):
  rpt=[]
  rpt.append(f'{comment_pfx} file generated by {p.Path(__file__).name}')
  rpt.append(f'{comment_pfx} (https://github.com/CTSRD-CHERI/de10pro-playground-user-scripts.git)')
  rpt.append(f'{comment_pfx} {datetime.datetime.now()}')
  rpt.append(f'{comment_pfx} template file rendered with parameters:')
  for k, v in params.items(): rpt.append(f'{comment_pfx} {k} = {v}')
  return '\n'.join(rpt)

if __name__ == '__main__':

  # command line arguments
  parser = argparse.ArgumentParser(description='setup de10pro playground files')

  subparsers = parser.add_subparsers(help='sub-command help')
  temp_gen_parser = subparsers.add_parser('generate-templates', help='')
  temp_gen_parser.add_argument(
      'template_parameters', metavar='YAML_TEMPLATE_PARAMETERS'
    , help="The YAML_TEMPLATE_PARAMETERS yaml file with the jinja template parameters to use")
  clargs=parser.parse_args()

  # prepare the template parameters
  template_params = None
  if hasattr(clargs, 'template_parameters'):
    with open(clargs.template_parameters, mode='r') as f:
      template_params = yaml.safe_load(f)
  # run through each templates in the given template parameter configurations
  # and generate the parameterized render
  env = jinja2.Environment(loader=jinja2.FileSystemLoader('templates/'))
  if template_params:
    for t, params in template_params.items():
      lines = env.get_template(t).render(**params).split('\n')
      if lines[0][0:2] == '#!':
        lines.insert(1, '\n'+report(params))
      else:
        lines.insert(0, report(params)+'\n')
      r = '\n'.join(lines)
      print(r)
